openapi: "3.1.0"
info:
  version: 1.0.0
  title: Petstore
  description: This is a sample Petstore API.
  license:
    name: MIT

  # Custom fields to be processed by the CI/CD pipeline
  x-api-name: petstore-api # name of the API
  x-team-name: kronos # name of the team responsible for the API
  x-business-unit: wholesale # business unit the team belongs to

x-kong-namespace: /petstore

x-internal-server:
  url: http://petstore-api.petstore.svc.cluster.local:3030
  description: internal hostname for the API gateway

servers:
  - url: http://localhost:8000/petstore
    x-internal: false
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            minimum: 1
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            Access-Control-Allow-Origin:
              description: Indicates whether the response can be shared with resources with the given origin
              schema:
                type: string
                maxLength: 100
            RateLimit-Limit:
              description: The number of allowed requests in the current period
              schema:
                type: integer
                format: int32
            RateLimit-Remaining:
              description: The number of remaining requests in the current period
              schema:
                type: integer
                format: int32
            RateLimit-Reset:
              description: The number of seconds left in the current period
              schema:
                type: integer
                format: int32
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
                maxLength: 50
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 24
        tag:
          type: string
          maxLength: 16
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 400
          maximum: 599
        message:
          type: string
          maxLength: 100